services:

  azurite.lensup:
    container_name: azurite.lensup
    image: mcr.microsoft.com/azure-storage/azurite
    hostname: azurite
    restart: always
    ports:
      - "10000:10000" 
      - "10001:10001" 
      - "10002:10002"
    command: azurite --loose --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0

  lensup.webhooktriggersimulator:
    environment:
      - AzureFunctionsJobHost__Http__Port=8086
      - AzureWebJobsAzureStorageConnectionString=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://host.docker.internal:10001/devstoreaccount1;
      - GalleryServiceWebhookUrl=http://host.docker.internal:8082/Webhook
    container_name: lensup.webhooktriggersimulator
    image: lensup.webhooktriggersimulator
    build:
      context: ./backend-services
      dockerfile: webhooks-trigger-simulator/Dockerfile
    ports:
      - "8086:8080"
    depends_on:
      - azurite.lensup

  lensup.photocollectorservice.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=localCertPassword
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/lens-up.pfx
    container_name: lensup.photocollectorservice.api
    image: lensup.photocollectorservice.api
    build:
      context: ./backend-services
      dockerfile: photo-collector-service/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - azurite.lensup

  lensup.photocollectorservice.ui:
    build:
      context: ./ui-applications
      dockerfile: Dockerfile
      args:
        SERVICE: photo-collector-ui
    image: lensup.photocollectorservice.ui
    container_name: lensup.photocollectorservice.ui
    ports:
      - "5002:5002"
    environment:
      - NODE_ENV=dev
    command: npm run dev
    depends_on:
      - lensup.photocollectorservice.api

  lensup.galleryservice.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8082
      - ASPNETCORE_HTTPS_PORTS=8083
      - ASPNETCORE_Kestrel__Certificates__Default__Password=localCertPassword
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/lens-up.pfx
    container_name: lensup.galleryservice.api
    image: lensup.galleryservice.api
    build:
      context: ./backend-services
      dockerfile: gallery-service/Dockerfile
    ports:
      - "8082:8082"
      - "8083:8083"
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - azurite.lensup

# TODO: Remove all code related to lensup.galleryservice.webhooktriggersimulator
  # lensup.galleryservice.webhooktriggersimulator:
  #   environment:
  #     - AzureFunctionsJobHost__Http__Port=8086
  #     - AzureWebJobsAzureStorageConnectionString=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://host.docker.internal:10001/devstoreaccount1;
  #     - WebhookUrl=http://host.docker.internal:8082/Webhook
  #   container_name: lensup.galleryservice.webhooktriggersimulator
  #   image: lensup.galleryservice.webhooktriggersimulator
  #   build:
  #     context: ./backend-services
  #     dockerfile: gallery-service/src/LensUp.GalleryService.WebhookTriggerSimulator/Dockerfile
  #   ports:
  #     - "8086:8080"
  #   depends_on:
  #     - azurite.lensup
  #     - lensup.galleryservice.api

  lensup.galleryservice.ui:
    build:
      context: ./ui-applications
      dockerfile: Dockerfile
      args:
        SERVICE: gallery-ui
    image: lensup.galleryservice.ui
    container_name: lensup.galleryservice.ui
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=dev
    command: npm run dev
    depends_on:
      - lensup.galleryservice.api

  lensup.backofficeservice.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8084
      - ASPNETCORE_HTTPS_PORTS=8085
      - ASPNETCORE_Kestrel__Certificates__Default__Password=localCertPassword
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/lens-up.pfx
    container_name: lensup.backofficeservice.api
    image: lensup.backofficeservice.api
    build:
      context: ./backend-services
      dockerfile: back-office-service/Dockerfile
    ports:
      - "8084:8084"
      - "8085:8085"
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - azurite.lensup